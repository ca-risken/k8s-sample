apiVersion: batch/v1
kind: CronJob
metadata:
  name: alert-cronjob
  namespace: core
  labels:
    app: alert-cronjob
spec:
  schedule: "00 01 * * *"
  jobTemplate:
    metadata:
      labels:
        app: alert-cronjob
    spec:
      template:
        spec:
          serviceAccountName: core
          containers:
          - name: alert-cronjob
            image: alpine
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: ["sh", "-c"]
            args:
            - cd /tmp;
              wget -q https://github.com/fullstorydev/grpcurl/releases/download/v1.8.2/grpcurl_1.8.2_linux_arm64.tar.gz;
              tar xvfz grpcurl_1.8.2_linux_arm64.tar.gz;
              /tmp/grpcurl -plaintext core.core.svc.cluster.local:8080 core.alert.AlertService.AnalyzeAlertAll;
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: iam-cronjob
  namespace: core
  labels:
    app: iam-cronjob
spec:
  schedule: "0 */8 * * *" # every per 8 hours
  jobTemplate:
    metadata:
      labels:
        app: iam-cronjob
    spec:
      template:
        spec:
          serviceAccountName: core
          containers:
          - name: iam-cronjob
            image: alpine
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: ["sh", "-c"]
            args:
            - cd /tmp;
              wget -q https://github.com/fullstorydev/grpcurl/releases/download/v1.8.2/grpcurl_1.8.2_linux_arm64.tar.gz;
              tar xvfz grpcurl_1.8.2_linux_arm64.tar.gz;
              /tmp/grpcurl -plaintext core.core.svc.cluster.local:8080 core.iam.IAMService.AnalyzeTokenExpiration;
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: report-cronjob
  namespace: core
  labels:
    app: report
spec:
  # The time zone must be set in UTC.(For JST, set +0900)
  # @see https://kubernetes.io/ja/docs/concepts/workloads/controllers/cron-jobs/ 
  schedule: "00 15 * * *"
  jobTemplate:
    metadata:
      labels:
        app: report
    spec:
      template:
        spec:
          serviceAccountName: core
          containers:
          - name: report-cronjob
            image: alpine
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: ["sh", "-c"]
            args:
            - cd /tmp;
              wget -q https://github.com/fullstorydev/grpcurl/releases/download/v1.8.2/grpcurl_1.8.2_linux_arm64.tar.gz;
              tar xvfz grpcurl_1.8.2_linux_arm64.tar.gz;
              /tmp/grpcurl -plaintext core.core.svc.cluster.local:8080 core.report.ReportService.CollectReportFinding;
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: purge-core-cronjob
  namespace: core
  labels:
    app: purge-core
spec:
  schedule: "00 03 * * *" # UTC
  jobTemplate:
    metadata:
      labels:
        app: purge-core
    spec:
      template:
        spec:
          serviceAccountName: core
          containers:
          - name: purge-core-cronjob
            image: fullstorydev/grpcurl
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: [
              "grpcurl",
              "-plaintext",
              "core.core.svc.cluster.local:8080",
              "core.project.ProjectService.CleanProject",
            ]
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never
