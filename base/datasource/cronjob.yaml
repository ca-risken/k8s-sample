apiVersion: batch/v1
kind: CronJob
metadata:
  name: aws-cronjob
  namespace: datasource
  labels:
    app: aws
spec:
  # The time zone must be set in UTC.(For JST, set +0900)
  # @see https://kubernetes.io/ja/docs/concepts/workloads/controllers/cron-jobs/ 
  schedule: "30 15 * * *" 
  jobTemplate:
    metadata:
      labels:
        app: aws
    spec:
      template:
        spec:
          serviceAccountName: datasource
          containers:
          - name: aws-cronjob
            image: fullstorydev/grpcurl
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: [
              "grpcurl",
              "-plaintext",
              "datasource-api.datasource.svc.cluster.local:8081",
              "datasource.aws.AWSService.InvokeScanAll",
            ]
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: code-cronjob
  namespace: datasource
  labels:
    app: code
spec:
  # The time zone must be set in UTC.(For JST, set +0900)
  # @see https://kubernetes.io/ja/docs/concepts/workloads/controllers/cron-jobs/ 
  schedule: "15 17 * * *" 
  jobTemplate:
    metadata:
      labels:
        app: code
    spec:
      template:
        spec:
          serviceAccountName: datasource
          containers:
          - name: code-cronjob
            image: fullstorydev/grpcurl
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: [
              "grpcurl",
              "-plaintext",
              "datasource-api.datasource.svc.cluster.local:8081",
              "datasource.code.CodeService.InvokeScanAll",
            ]
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: diagnosis-cronjob
  namespace: datasource
  labels:
    app: diagnosis
spec:
  # The time zone must be set in UTC.(For JST, set +0900)
  # @see https://kubernetes.io/ja/docs/concepts/workloads/controllers/cron-jobs/
  schedule: "05 17 * * *"
  jobTemplate:
    metadata:
      labels:
        app: diagnosis
    spec:
      template:
        spec:
          serviceAccountName: datasource
          containers:
          - name: diagnosis-cronjob
            image: fullstorydev/grpcurl
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: [
              "grpcurl",
              "-plaintext",
              "datasource-api.datasource.svc.cluster.local:8081",
              "datasource.diagnosis.DiagnosisService.InvokeScanAll",
            ]
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: google-cronjob
  namespace: datasource
  labels:
    app: google
spec:
  # The time zone must be set in UTC.(For JST, set +0900)
  # @see https://kubernetes.io/ja/docs/concepts/workloads/controllers/cron-jobs/ 
  schedule: "20 17 * * *" 
  jobTemplate:
    metadata:
      labels:
        app: google
    spec:
      template:
        spec:
          serviceAccountName: datasource
          containers:
          - name: google-cronjob
            image: fullstorydev/grpcurl
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: [
              "grpcurl",
              "-plaintext",
              "datasource-api.datasource.svc.cluster.local:8081",
              "datasource.google.GoogleService.InvokeScanAll",
            ]
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: osint-cronjob
  namespace: datasource
  labels:
    app: osint
spec:
  # The time zone must be set in UTC.(For JST, set +0900)
  # @see https://kubernetes.io/ja/docs/concepts/workloads/controllers/cron-jobs/
  schedule: "10 17 * * *"
  jobTemplate:
    metadata:
      labels:
        app: osint
    spec:
      template:
        spec:
          serviceAccountName: datasource
          containers:
          - name: osint-cronjob
            image: fullstorydev/grpcurl
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: [
              "grpcurl",
              "-plaintext",
              "datasource-api.datasource.svc.cluster.local:8081",
              "datasource.osint.OsintService.InvokeScanAll",
            ]
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: purge-datasource-cronjob
  namespace: datasource
  labels:
    app: purge-datasource
spec:
  schedule: "00 03 * * *" # UTC
  jobTemplate:
    metadata:
      labels:
        app: purge-datasource
    spec:
      template:
        spec:
          serviceAccountName: datasource
          containers:
          - name: purge-datasource-cronjob
            image: fullstorydev/grpcurl
            resources:
              limits:
                memory: 2048Mi
                cpu: 1
              requests:
                memory: 200Mi
                cpu: 100m
            command: [
              "grpcurl",
              "-plaintext",
              "datasource-api.datasource.svc.cluster.local:8081",
              "datasource.DataSourceService.CleanDataSource",
            ]
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
          restartPolicy: Never
